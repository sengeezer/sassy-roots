//
// Button groups
// --------------------------------------------------


// Make the div behave like a button
.btn-group {
	position: relative;
	display: inline-block;
	@include ie7-inline-block();
	font-size: 0; // remove as part 1 of font-size inline-block hack
	vertical-align: middle; // match .btn alignment given font-size hack above
	white-space: nowrap; // prevent buttons from wrapping when in tight spaces (e.g., the table on the tests page)
	@include ie7-restore-left-whitespace();
	// Space out series of button groups
	+ .btn-group { margin-left: 5px; }
	// Float them, remove border radius, then re-add to first and last elements
	> .btn {
		position: relative;
		@include border-radius(0);
<<<<<<< HEAD
		+ .btn { margin-left: -1px;}
=======
		+ .btn { margin-left: -1px; }
		// Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match
		&:first-child {
			margin-left: 0;
			@include border-top-left-radius($baseBorderRadius);
			@include border-bottom-left-radius($baseBorderRadius);
		}
		// Reset corners for large buttons
		&.large:first-child {
			margin-left: 0;
			@include border-top-left-radius($borderRadiusLarge);
			@include border-bottom-left-radius($borderRadiusLarge);
		}
		// On hover/focus/active, bring the proper btn to front
		&:hover, &:focus, &:active, &.active { z-index: 2; }
		// Split button dropdowns
		// Give the line between buttons some depth
		+ .dropdown-toggle {
			padding: {
				left: 8px;
				right: 8px;
			}
			@include box-shadow(inset 1px 0 0 rgba(255,255,255,.125), inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05));
			*padding-top: 5px;
			*padding-bottom: 5px;
		}
	}
	> .btn, > .dropdown-menu, > .popover {
		font-size: $baseFontSize; // redeclare as part 2 of font-size inline-block hack
	}
	// Reset fonts for other sizes
	> .btn-mini {
		font-size: $fontSizeMini;
		+ .dropdown-toggle {
			padding: {
				left: 5px;
				right: 5px;
			}
			*padding-top: 2px;
			*padding-bottom: 2px;
		}
	}
	> .btn-small {
		font-size: $fontSizeSmall;
		+ .dropdown-toggle {
			*padding-top: 5px;
			*padding-bottom: 4px;
		}
	}
	> .btn-large {
		font-size: $fontSizeLarge;
		+ .dropdown-toggle {
			padding-left: 12px;
			padding-right: 12px;
			*padding-top: 7px;
			*padding-bottom: 7px;
		}
	}
	// Need .dropdown-toggle since :last-child doesn't apply given a .dropdown-menu immediately after it
	> .btn:last-child, > .dropdown-toggle {
		@include border-top-right-radius($baseBorderRadius);
		@include border-bottom-right-radius($baseBorderRadius);
	}
	> .btn.large:last-child, > .large.dropdown-toggle {
		@include border-top-right-radius($borderRadiusLarge);
		@include border-bottom-right-radius($borderRadiusLarge);
	}
	// On active and open, don't show outline
	.dropdown-toggle:active, &.open .dropdown-toggle { outline: 0; }
	&.open {
		// The clickable button for toggling the menu
		// Remove the gradient and set the same inset shadow as the :active state
		.dropdown-toggle {
			background-image: none;
			@include box-shadow(inset 0 2px 4px rgba(0,0,0,.15), 0 1px 2px rgba(0,0,0,.05));
		}
		// Keep the hover's background when dropdown is open
		.btn.dropdown-toggle { background-color: $btnBackgroundHighlight; }
		.btn-primary.dropdown-toggle { background-color: $btnPrimaryBackgroundHighlight; }
		.btn-warning.dropdown-toggle { background-color: $btnWarningBackgroundHighlight; }
		.btn-danger.dropdown-toggle { background-color: $btnDangerBackgroundHighlight; }
		.btn-success.dropdown-toggle { background-color: $btnSuccessBackgroundHighlight; }
		.btn-info.dropdown-toggle { background-color: $btnInfoBackgroundHighlight; }
		.btn-inverse.dropdown-toggle { background-color: $btnInverseBackgroundHighlight; }
>>>>>>> 15e1fffb16a4c97199db15592128c3a9fffdc37e
	}
}

// Optional: Group multiple button groups together for a toolbar
.btn-toolbar {
	font-size: 0; // Hack to remove whitespace that results from using inline-block
<<<<<<< HEAD
	margin: {
		top: $baseLineHeight / 2;
		bottom: $baseLineHeight / 2;
	}
	> .btn + .btn, 
	> .btn-group + .btn,
	> .btn + .btn-group { margin-left: 5px; }
}

.btn-group > .btn,
.btn-group > .dropdown-menu,
.btn-group > .popover {
  font-size: $baseFontSize; // redeclare as part 2 of font-size inline-block hack
=======
	margin-top: $baseLineHeight / 2;
	margin-bottom: $baseLineHeight / 2;
	> .btn + .btn,
	> .btn-group + .btn,
	> .btn + .btn-group { margin-left: 5px; }
>>>>>>> 15e1fffb16a4c97199db15592128c3a9fffdc37e
}

// Reposition the caret
.btn .caret {
	margin: {
		top: 8px;
		left: 0;
	}
}
// Carets in other button sizes
.btn-mini, .btn-small, .btn-large {
	.caret { margin-top: 6px; }
}
.btn-large .caret {
	border-left-width:  5px;
	border-right-width: 5px;
	border-top-width:   5px;
}

// Upside down carets for .dropup
.dropup .btn-large .caret { border-bottom-width: 5px; }

// Account for other colors
.btn-primary, .btn-warning,
.btn-danger, .btn-info,
.btn-success, .btn-inverse {
	.caret {
		border-top-color: $white;
		border-bottom-color: $white;
	}
}

// Vertical button groups

.btn-group-vertical {
	display: inline-block; // makes buttons only take up the width they need
	@include ie7-inline-block();
	> .btn {
		display: block;
		float: none;
		max-width: 100%;
		@include border-radius(0);
		+ .btn {
			margin: {
				left: 0;
				top: -1px;
			}
		}
		&:first-child { @include border-radius($baseBorderRadius $baseBorderRadius 0 0); }
		&:last-child { @include border-radius(0 0 $baseBorderRadius $baseBorderRadius); }
	}
	> .btn-large {
		&:first-child { @include border-radius($borderRadiusLarge $borderRadiusLarge 0 0); }
		&:last-child { @include border-radius(0 0 $borderRadiusLarge $borderRadiusLarge); }
	}
}
